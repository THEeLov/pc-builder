// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  expiresAt DateTime
  userId    Int
  user      User?     @relation(fields: [userId], references: [id])
  @@map("sessions")
}

model Component {
  id             Int      @id @default(autoincrement())
  name           String
  type           String
  price          Float
  manufacturer   String
  imageUrl       String
  motherboard    Motherboard?
  processor      Processor?
  gpu            GPU?
  ram            RAM?
  storage        Storage?
  powerSupply    PowerSupply?
  pcCase         PCCase?
}

model User {
  id              Int             @id @default(autoincrement())
  username        String
  email           String          @unique
  password        String
  userType        String
  configurations   PCConfiguration[]
  sessions        Session[]
  @@map("user")
}

model Motherboard {
  id              Int           @id @default(autoincrement())
  componentId     Int           @unique
  socket          String
  formFactor      String
  ramSlots        Int
  ramType         String
  gpuInterface    String
  stroageBusType  String
  component    Component @relation(fields: [componentId], references: [id])
}

model Processor {
  id            Int         @id @default(autoincrement())
  componentId   Int         @unique
  architecture  String
  cores         Int
  threads       Int
  bits          Int
  socket        String
  component    Component @relation(fields: [componentId], references: [id])

}

model GPU {
  id              Int       @id @default(autoincrement())
  componentId     Int       @unique
  memory          Int
  powerConnector  String
  interface       String
  power           Int
  component    Component @relation(fields: [componentId], references: [id])
}

model RAM {
  id              Int      @id @default(autoincrement())
  componentId     Int      @unique
  memoryType      String
  capacity        Int
  computerType    String
  component    Component @relation(fields: [componentId], references: [id])
}

model Storage {
  id              Int      @id @default(autoincrement())
  componentId     Int      @unique
  storageType     String
  capacity        Int
  busType         String
  component    Component @relation(fields: [componentId], references: [id])
}

model PowerSupply {
  id              Int     @id @default(autoincrement())
  componentId     Int     @unique
  powerOutput     Int
  efficiency      String
  formFactor      String
  component    Component @relation(fields: [componentId], references: [id])
}

model PCCase {
  id              Int     @id @default(autoincrement())
  componentId     Int     @unique
  formFactor      String
  component    Component @relation(fields: [componentId], references: [id])
}

model PCConfiguration {
  id            Int         @id @default(autoincrement())
  userId        Int
  totalPrice    Float
  motherboardId Int
  processorId   Int
  ramIds        Int[]
  gpuId         Int
  storageIds    Int[]
  powerSupplyId Int
  user          User        @relation(fields: [userId], references: [id])
  @@map("configurations")
}

